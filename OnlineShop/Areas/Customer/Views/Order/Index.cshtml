@model List<OrderDetailsViewModel>

@{
    ViewData["Title"] = "Order Information";
}

@foreach (var orderDetails in Model)
{

    <div class="container-fluid">
        <div class="row">
            <h3 class="text text-center " style="margin:20px"> Order Information</h3>
            <div class="col-lg-6 col-md-10 col-12">
                <div class="mt-4 ml-4">
                    <h4>Order ID :  @orderDetails.OrderId</h4>
                    <h4>Order No : @orderDetails.OrderNo</h4>
                    <h4>User ID: @orderDetails.UserName</h4>
                </div>
            </div>

            <div class="col-lg-2 col-md-6">
                <div class="mt-4">
                    <h4>Delivery Info</h4>
                    <form asp-action="AssignToRider" method="post">
                        <input type="hidden" name="id" value="@Model" />
                        <button type="submit" class="btn btn-info">Assign Rider</button>
                    </form>
                </div>
            </div>

            <div class="col-lg-4 col-md-6">
                <div class="mt-4">
                    <h4>Order Status</h4>
                    <div class="d-flex">
                        <button type="submit" class="btn btn-primary mr-2">Processing</button>
                        <button type="submit" class="btn btn-primary mr-2">Tracking</button>
                        <button type="submit" class="btn btn-primary">Delivered</button>
                    </div>
                </div>
            </div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Customer</th>
                    <th>Address</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Order Date</th>
                    <th>Total Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@orderDetails.CustomerName</td>
                    <td>@orderDetails.CustomerAddress</td>
                    <td>@orderDetails.CustomerEmail</td>
                    <td>@orderDetails.CustomerPhone</td>
                    <td>@orderDetails.OrderDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@orderDetails.TotalPrice</td>
                    <td>
                        <form method="post" asp-action="Delete" onsubmit="return confirm('Are you sure you want to delete this item?');">
                            <input type="hidden" name="id" value="@orderDetails.OrderId" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            </tbody>
            <thead>
                <tr>
                    <th>Product ID</th>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Image</th>
                    <th>Color</th>
                    <th>Quantity</th>
                    <th>Payment Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in orderDetails.Products)
                {
                    <tr>
                        <td>@product.ProductId</td>
                        <td>@product.ProductName</td>
                        <td>@product.Price</td>
                        <td><img src="~/@product.Image" alt="Product Image" width="70" height="70" /></td>
                        <td>@product.ProductColor</td>
                        <td>@product.Quantity</td>
                        <td>Cash On Delivery</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <hr />
}

@section Scripts {
    <script>
        function confirmDelete() {
            if (confirm('Are you sure you want to delete this item?')) {
                deleteOrder();
            }
        }

        function deleteOrder() {
            var form = document.getElementById('deleteForm');

            fetch(form.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify({ id: form.id.value })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    form.closest('div').remove();
                })
                .catch(error => {
                    console.error('There was a problem with your fetch operation:', error);
                });
        }
    </script>
}
